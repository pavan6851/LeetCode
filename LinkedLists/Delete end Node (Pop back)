#include <iostream>
using namespace std;

class Node
{
    public:
        int data;
        Node *next;

    Node(int val)
    {   
        data = val;
        next = NULL;
    }
};

class List
{
    Node *head;
    Node *tail;

    public:
        List()
        {
            head = tail = NULL;
        }
    
        void pushfront(int val)
        {
            Node *newNode = new Node(val);

            if(head == NULL)
            {
                head = tail = newNode;
            }
            else
            {
                newNode->next = head;
                head = newNode;
            }

        }

        void pop_front()
        {
            if(head == NULL)
            {
                cout << "LL is empty" << endl;
                return;
            }

            Node* temp = head;
            head = head->next;
            temp = NULL;

            delete temp;
        }

        void popback()
        {
            if(head == NULL)
            {
                cout << "LL is empty" << endl;
                return;
            }

        Node *temp = head;
            while (temp->next != tail)
            {
                temp = temp->next;
            }
            delete tail;
            tail = temp;
            tail->next = NULL;
        }

        void display()
        {
            Node *temp = head;

            while(temp != NULL)
            {
                cout << temp->data << "->";
                temp = temp->next;
            }
            cout << "NULL";
        }
        
};

int main()
{
    List L;
    L.pushfront(1);
    L.pushfront(2);
    L.pushfront(3);
    L.pushfront(4);
    cout << "Linkedlist : ";
    L.display();
    cout << endl;
    L.popback();
    L.display();

    return 0;
}
