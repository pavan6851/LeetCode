class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) 
    {
        for (int i = 0; i < nums.size(); i++) 
        {
            for (int j = i + 1; j < nums.size(); j++) 
            {
                if (nums[i] + nums[j] == target) 
                {
                    return {i, j}; 
                }
            }
        }
        return {}; 
    }
};

//HASHMAP optimized solution.

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) 
    {
        unordered_map<int, int> m;

        for (int i = 0; i < nums.size(); i++)
        {
            int diff = target - nums[i];
            if (m.find(diff) != m.end()) 
            {
                return {m[diff], i};
            }
            m.insert({nums[i], i});
        }
        return {};
    }
};
